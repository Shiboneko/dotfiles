call pathogen#infect()
colo molokai
set directory=$HOME/.vim/swapfiles//
let g:airline_powerline_fonts = 1
let g:airline_theme='simple'
set laststatus=2


"See, in which line the cursor is
set cursorline

"See, in which column the cursor is
set cursorcolumn
set modeline
"set clipboard=unnamedplus

let g:syntastic_enable_signs=1
let g:syntastic_quiet_messages = {'level': 'warnings'}
let g:syntastic_auto_loc_list=1
let g:syntastic_java_javac_config_file_enabled=1
let g:syntastic_java_javac_config_file="syntastic_config"

let g:syntastic_markdown_folding_disabled=1

syntax on
filetype plugin indent on

set nocompatible
filetype indent plugin on
set expandtab
set smarttab
set autoindent
" Display Line Numbers
set number

" Recursive
set path+=**
set wildmenu


"netrw Settings
let g:netrw_banner=0 "disable Banner
let g:netrw_browse_split=4 "open in main window
let g:netrw_altv=1 "open Splits to the right
let g:netrw_liststyle=3 "tree view

"Make Tags
command! MakeTags !ctags -R .

"Toggle the Tagbar
nmap <F8> :TagbarToggle<CR>

"Map Vimtip Functip to the command Vimtip
command! Vimtip :call Vimtip()
"Display a Vimtip at the start
autocmd VimEnter * Vimtip
function! Vimtip()
        let vimtipsfile = $HOME."/.vim/vimtips"
        let vimtips = readfile(vimtipsfile)
        let linecount = count(vimtips, "%") + 1
        let random = s:randnum(linecount-1)
        echom "Vimtip #".random

        let c = 1
        let start = 0

        while c < random
                let start = index(vimtips, "%", start+1)
                let c += 1
        endwhile


        let end = index(vimtips, "%",start+1)

        let c = start+1
        while c < end
                echom get(vimtips, c)
                let c += 1
        endwhile


endfunction

function! s:randnum(max) abort
  return str2nr(matchstr(reltimestr(reltime()), '\v\.@<=\d+')[1:]) % a:max
endfunction


function! SearchJavaClasspath()
	SyntasticInfo
	let exp = '%:p'
	let parent = expand(exp)
	for i in [1,2,3,4,5,6,7,8,9,10]
		let parent = expand(exp.':h')
		let ls =  globpath(parent,'build.gradle')
		if len(ls)
			let gradlefile = globpath(parent,'gradle.build')
			let projectdir = expand(exp.':h')
			let i=5
			break
		endif
		let exp = exp.':h'


	endfor

	let configFile = globpath(projectdir,g:syntastic_java_javac_config_file)

	echo g:syntastic_java_javac_config_file
	echo projectdir
	echo configFile
	if len(configFile)
		echo "Found config file. Executing..."
		execute 'source '.configFile
	endif

	let srcJava = expand(projectdir.'/src/java/',':p')

	if g:syntastic_java_javac_classpath !~ srcJava
		let g:syntastic_java_javac_classpath=g:syntastic_java_javac_classpath.':'.srcJava
	endif

	echo "New Classpath: ". g:syntastic_java_javac_classpath
endfunction
